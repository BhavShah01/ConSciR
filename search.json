[{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://bhavshah01.github.io/ConSciR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://bhavshah01.github.io/ConSciR/articles/ConSciR-FirstTimeR.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Using R for the first time","text":"get started R, need install R RStudio, user-friendly interface R. First, download R Comprehensive R Archive Network (CRAN), follow installation instructions operating system. installing R, download RStudio follow prompts complete installation. plenty online resources available guide step. R: https://cloud.r-project.org/ RStudio: https://posit.co/download/rstudio-desktop/ Useful starting point RStudio Education: Finding Way R","code":""},{"path":"https://bhavshah01.github.io/ConSciR/articles/ConSciR-FirstTimeR.html","id":"loading-a-package-and-basic-introduction-to-rstudio","dir":"Articles","previous_headings":"","what":"Loading a Package and Basic Introduction to RStudio","title":"Using R for the first time","text":"first open RStudio, ’ll see layout multiple panes. main areas Console (can type execute R commands), Source Editor (write edit R scripts), Environment/History pane, Files/Plots/Packages/Help pane.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/articles/ConSciR-FirstTimeR.html","id":"loading-a-package-for-the-first-time","dir":"Articles","previous_headings":"Loading a Package and Basic Introduction to RStudio","what":"Loading a Package for the First Time","title":"Using R for the first time","text":"load package R first time, follow two steps: Installing package: Open Console RStudio type: Loading package: installation, load package R session using library() function:","code":"install.packages(\"tidyverse\") library(tidyverse)"},{"path":"https://bhavshah01.github.io/ConSciR/articles/ConSciR-FirstTimeR.html","id":"basic-rstudio-features","dir":"Articles","previous_headings":"Loading a Package and Basic Introduction to RStudio","what":"Basic RStudio Features","title":"Using R for the first time","text":"Creating new R script: Click File > New File > R Script. Running code: Place cursor line code press Ctrl+Enter (Cmd+Enter Mac). Viewing installed packages: bottom-right pane, click “Packages” tab. Getting help: Type ?function_name Console. example: Viewing plots: Created plots appear “Plots” tab bottom-right pane. Managing files: Use “Files” tab bottom-right pane navigate project directory.","code":"?mean"},{"path":"https://bhavshah01.github.io/ConSciR/articles/ConSciR-FirstTimeR.html","id":"tidy-data","dir":"Articles","previous_headings":"","what":"Tidy data","title":"Using R for the first time","text":"ensure optimal functionality ConSciR functions, crucial maintain data tidy consistently formatted structure. allows code easily locate process variables. Please note specific naming conventions columns essential package work correctly. following formats recommended:","code":""},{"path":"https://bhavshah01.github.io/ConSciR/articles/ConSciR-FirstTimeR.html","id":"temperature-and-relative-humidity-data","dir":"Articles","previous_headings":"Tidy data","what":"Temperature and Relative Humidity Data","title":"Using R for the first time","text":"","code":"#>     Site  Sensor                Date Temp RH #> 1 London Gallery 2023-01-01 00:00:00 20.5 45 #> 2 London Gallery 2023-01-01 01:00:00 21.0 47 #> 3   York    Room 2023-01-01 00:00:00 19.8 50 #> 4   York    Room 2023-01-01 02:00:00 20.2 49"},{"path":"https://bhavshah01.github.io/ConSciR/articles/ConSciR-FirstTimeR.html","id":"light-and-uv-data","dir":"Articles","previous_headings":"Tidy data","what":"Light and UV Data","title":"Using R for the first time","text":"Key Points: Column Names: Try use exact column names shown (Site, Sensor, Date, Temp, RH, Lux, UV). names case-sensitive. Tools tidy files developed. Date Format: Date column ideally datetime format (YYYY-MM-DD HH:MM:SS) software attempt interpret date column. Check behaviour dates format hasn’t used. Numeric Data: Ensure Temp, RH, Lux, UV columns contain numeric data. Categorical Data: Site Sensor categorical variables character strings. Tidy Structure: row represents single observation, column represents single variable. Missing Columns: Include relevant columns, even data points missing (leave blank use NA missing values).","code":"#>     Site Sensor                Date Lux UV #> 1 Museum  Store 2023-01-01 00:00:00  45  0 #> 2 Museum  Store 2023-01-01 01:00:00  56  0 #> 3   Case  Shelf 2023-01-01 00:00:00 200 20 #> 4   Case  Shelf 2023-01-01 02:00:00 199 49"},{"path":"https://bhavshah01.github.io/ConSciR/articles/ConSciR.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"ConSciR","text":"ConSciR R package specifically designed assist conservators, scientists engineers providing toolkit performing calculations streamlining common tasks cultural heritage conservation.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/articles/ConSciR.html","id":"install-and-load","dir":"Articles","previous_headings":"","what":"Install and load","title":"ConSciR","text":"-- ConSciR Github page: ConSciR Github","code":"install.packages(\"pak\") pak::pak(\"BhavShah01/ConSciR\") # install.packages(\"devtools\") devtools::install_github(\"BhavShah01/ConSciR\")"},{"path":"https://bhavshah01.github.io/ConSciR/articles/ConSciR.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"ConSciR","text":"Add calculated values using mutate Perform calculations visualise explore data  Built psychrometric chart","code":"# Load packages library(ConSciR) library(dplyr) library(ggplot2) # Add calculated values using mutate head(mydata) |>    mutate(     Absolute_Humidity = calcAH(Temp, RH),      Dew_Point = calcDP(Temp, RH),      Mixing_Ratio = calcMR(Temp, RH),      Humidity_Ratio = calcHR(Temp, RH),     Enthalpy = calcEnthalpy(Temp, RH),      Saturation_Vapour_Pressure = calcPws(Temp),      Actual_Vapour_Pressure = calcPw(Temp, RH),      Air_Density = calcAD(Temp, RH),     Temp_calc = calcTemp(RH, Dew_Point),     RH_AH_calc = calcRH_AH(Temp, Absolute_Humidity),     RH_DP_calc = calcRH_DP(Temp, Dew_Point)   ) |>   glimpse() #> Rows: 6 #> Columns: 16 #> $ Site                       <chr> \"London\", \"London\", \"London\", \"London\", \"Lo… #> $ Sensor                     <chr> \"Room 1\", \"Room 1\", \"Room 1\", \"Room 1\", \"Ro… #> $ Date                       <dttm> 2024-01-01 00:00:00, 2024-01-01 00:15:00, … #> $ Temp                       <dbl> 21.8, 21.8, 21.8, 21.7, 21.7, 21.7 #> $ RH                         <dbl> 36.8, 36.7, 36.6, 36.6, 36.5, 36.2 #> $ Absolute_Humidity          <dbl> 7.052415, 7.033251, 7.014087, 6.973723, 6.9… #> $ Dew_Point                  <dbl> 6.383970, 6.344456, 6.304848, 6.216205, 6.1… #> $ Mixing_Ratio               <dbl> 5.959586, 5.943237, 5.926888, 5.890432, 5.8… #> $ Humidity_Ratio             <dbl> 0.8563133, 0.8559750, 0.8556350, 0.8548712,… #> $ Enthalpy                   <dbl> 37.16251, 37.12097, 37.07942, 36.88466, 36.… #> $ Saturation_Vapour_Pressure <dbl> 26.13122, 26.13122, 26.13122, 25.97199, 25.… #> $ Actual_Vapour_Pressure     <dbl> 9.616288, 9.590156, 9.564025, 9.505748, 9.4… #> $ Air_Density                <dbl> 1.196694, 1.196694, 1.196694, 1.197100, 1.1… #> $ Temp_calc                  <dbl> 21.8, 21.8, 21.8, 21.7, 21.7, 21.7 #> $ RH_AH_calc                 <dbl> 36.8, 36.7, 36.6, 36.6, 36.5, 36.2 #> $ RH_DP_calc                 <dbl> 36.8, 36.7, 36.6, 36.6, 36.5, 36.2 mydata |>   # Calculate Absolute Humidity and Dew Point   mutate(     AbsHum = calcAH(Temp, RH),     DewPoint = calcDP(Temp, RH)   ) |>   # Create base plot using graph_TRH function   graph_TRH() +   # Add Absolute Humidity line   geom_line(aes(Date, AbsHum), color = \"green\") +   # Add Dew Point line   geom_line(aes(Date, DewPoint), color = \"purple\") +   # Apply a theme   theme_bw() head(mydata, 100) |>   graph_psychrometric() +    theme_bw()"},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/articles/Conservation-tools.html","id":"mould-isoline-and-growth-rates","dir":"Articles","previous_headings":"Mould","what":"Mould Isoline and Growth Rates","title":"Conservation tools","text":"calcMould_Zeng Zeng et al. (2023) model predicting mould growth dynamic model considers temperature relative humidity assess risk mould formation. model developed predict risk mould growth building envelopes various conditions. establishes isoline model describing mould growth surfaces predicts growth rates outside isoline areas modifying Sautour model relevant air temperature humidity conditions. code provided generates several visualisations help understand model. First, contour plot shows relationship temperature, relative humidity, mould growth potential across grid temperature humidity values. time series plot illustrates mould growth risk changes time relation relative humidity. bar chart displays distribution mould growth risk categories. visualisations help identify high-risk periods conditions may require inspection intervention prevent mould. See function documentation details calcMould_Zeng Zeng L, Chen Y, Ma M, et al. Prediction mould growth rate within building envelopes: development validation improved model. Building Services Engineering Research Technology. 2023;44(1):63-79. doi:10.1177/01436244221137846","code":"TRHgrid |>   mutate(Mould_LIM = calcMould_Zeng(Temp, RH)) |>   ggplot(aes(Temp, RH, z = Mould_LIM)) +   geom_contour_filled(bins = 20) +   labs(title = \"Mould Isoline Limit: LM0\", fill = \"RH Limit\") +    theme_bw() # TRHgrid |> #   mutate(Mould_growth = calcMould_Zeng(Temp, RH, label = TRUE)) |> #   ggplot(aes(Temp, RH, fill = Mould_growth, group = Mould_growth)) + #   # geom_raster() + #   geom_contour_filled() + #   labs(title = \"Mould Growth Rates\", fill = \"Growth Rates\") + #   # scale_fill_brewer(palette = \"Set2\") + #   theme_bw()  head(mydata) |>   mutate(     Mould_LIM0 = calcMould_Zeng(Temp, RH),     Mould_growth_rate = calcMould_Zeng(Temp, RH, label = TRUE),     )  #> # A tibble: 6 × 7 #>   Site   Sensor Date                 Temp    RH Mould_LIM0 Mould_growth_rate #>   <chr>  <chr>  <dttm>              <dbl> <dbl>      <dbl>             <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8       75.1                 0 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7       75.1                 0 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6       75.1                 0 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6       75.1                 0 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5       75.1                 0 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2       75.1                 0  mydata |>   mutate(Mould_LIM0 = calcMould_Zeng(Temp, RH)) |>   ggplot() +   geom_line(aes(Date, Mould_LIM0), col = \"purple\") +   geom_line(aes(Date, RH), col = \"blue\") +    labs(title = \"Mould Isoline Limit\",         y = \"Mould Limit (purple) and Humidity (blue)\") +    theme_bw() mydata |>   mutate(Mould_growth_rate = calcMould_Zeng(Temp, RH, label = TRUE)) |>   filter(!is.na(Mould_growth_rate)) |>   ggplot() +   geom_bar(aes(Mould_growth_rate, fill = Mould_growth_rate)) +   coord_flip() +   labs(title = \"Distribution of mould growth risk categories\",         y = NULL, x = NULL) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Conservation-tools.html","id":"mould-index","dir":"Articles","previous_headings":"Mould","what":"Mould Index","title":"Conservation tools","text":"calcMould_VTT VTT model, developed Technical Research Centre Finland (VTT), mathematical approach predicting mould growth various building materials. uses Mould Index scale 0 6 quantify mould growth potential based temperature, relative humidity, time, material properties. model accounts growth initiation, intensity, maximum levels, decline unfavorable conditions. expanded original focus wood include different material sensitivity classes (see calcMould_VTT details). 0 = mould growth 1 = Small amounts mould growth surface visible microscope 2 = Several local mould growth colonies surface visible microscope 3 = Visual findings mould surface <10% coverage 50% coverage microsocpe 4 = Visual findings mould surface 10-50% coverage >50% coverage microscope 5 = Plenty growth surface >50% visual coverage 6 = Heavy tight growth, coverage almost 100% Hukka, ., & Viitanen, H. . (1999). mathematical model mould growth wooden material. Wood Science Technology, 33(6), 475-485.","code":"TRHgrid |>   mutate(Mould_Index = calcMould_VTT(Temp, RH)) |>   filter(Mould_Index > 0) |>   ggplot(aes(Temp, RH, z = Mould_Index)) +   geom_contour_filled(bins = 20) +   labs(title = \"VTT Model\", fill = \"Mould Index\") +    theme_bw() mydata |>   mutate(Mould_VTT = calcMould_VTT(Temp, RH)) #> # A tibble: 35,136 × 6 #>    Site   Sensor Date                 Temp    RH Mould_VTT #>    <chr>  <chr>  <dttm>              <dbl> <dbl>     <dbl> #>  1 London Room 1 2024-01-01 00:00:00  21.8  36.8         0 #>  2 London Room 1 2024-01-01 00:15:00  21.8  36.7         0 #>  3 London Room 1 2024-01-01 00:29:59  21.8  36.6         0 #>  4 London Room 1 2024-01-01 00:44:59  21.7  36.6         0 #>  5 London Room 1 2024-01-01 00:59:59  21.7  36.5         0 #>  6 London Room 1 2024-01-01 01:14:59  21.7  36.2         0 #>  7 London Room 1 2024-01-01 01:29:59  21.7  36.3         0 #>  8 London Room 1 2024-01-01 01:44:59  21.7  36.4         0 #>  9 London Room 1 2024-01-01 01:59:59  21.7  36           0 #> 10 London Room 1 2024-01-01 02:14:59  21.6  36           0 #> # ℹ 35,126 more rows  mydata |>   mutate(Mould_VTT = calcMould_VTT(Temp, RH)) |>   ggplot() +   geom_line(aes(Date, Mould_VTT), col = \"purple\") +   # geom_line(aes(Date, RH), col = \"blue\") +    labs(title = \"VTT Model: Mould Index\", x = NULL, y = \"Mould Index\") +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Conservation-tools.html","id":"lifetime-multiplier","dir":"Articles","previous_headings":"","what":"Lifetime multiplier","title":"Conservation tools","text":"calcLM calcLM function calculates lifetime multiplier chemical degradation objects based temperature relative humidity conditions. metric provides estimate object’s expected lifetime relative standard conditions (20°C 50% RH), values closer 1 indicating suitable environments. function incorporates Arrhenius equation account temperature effects power law relationship relative humidity, making applicable various materials paper, synthetic films, dyes. approach allows conservators assess environmental conditions identify periods objects may higher risk degradation. Michalski, S. (2002). Double life five-degree drop, double life halving relative humidity. R. Vontobel (Ed.), Preprints 13th ICOM-CC Triennial Meeting Rio de Janeiro (Vol. , pp. 66-72). London: James & James.","code":"TRHgrid |>   mutate(LifeTime = calcLM(Temp, RH)) |>   ggplot(aes(Temp, RH, z = LifeTime)) +   geom_contour_filled(bins = 20) +   labs(title = \"Lifetime multiplier\", fill = \"Lifetime\") +    theme_bw() mydata |>   mutate(Lifetime = calcLM(Temp, RH)) |>   ggplot() +   geom_line(aes(Date, Lifetime), col = \"hotpink\", size = 1) +    # add 20C and 50%RH reference line   geom_hline(yintercept = calcLM(20, 50), col = \"violet\", size = 1) +    labs(     title = \"Lifetime multiplier of 'mydata'\", x = NULL, y = NULL,     subtitle = \"Lifetime multiplier (pink) and 20C and 50%RH reference line\") +   theme_bw() mydata |>   mutate(Lifetime = calcLM(Temp, RH)) |>   ggplot() +    geom_density(aes(Lifetime), fill = \"hotpink\", alpha = 0.4) +   # add 20C and 50%RH reference line   geom_vline(xintercept = calcLM(20, 50), col = \"violet\", size = 1) +    labs(title = \"Lifetime multiplier\", x = NULL,        subtitle = \"20C and 50%RH reference line\") +   theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Conservation-tools.html","id":"preservation-index","dir":"Articles","previous_headings":"","what":"Preservation Index","title":"Conservation tools","text":"calcPI Preservation Index, developed Image Permanence Institute, chemical kinetics metric determines rate deterioration materials based temperature relative humidity. calcPI function returns estimated years deterioration, higher values indicating conditions hygro-thermodynamically favorable object. information Preservation Index can found : https://s3.cad.rit.edu/ipi-assets/publications/understanding_preservation_metrics.pdf","code":"# Preservation Index plotted at different temperature and relative humidity TRHgrid |>   mutate(PI = calcPI(Temp, RH)) |>   ggplot(aes(Temp, RH, z = PI)) +   geom_contour_filled(bins = 20) +   labs(title = \"Preservation Index\", fill = \"PI\") +    theme_bw() # Log-Preservation Index  TRHgrid |>   mutate(PI_log10 = calcPI(Temp, RH) |> log10()) |>   ggplot(aes(Temp, RH, z = PI_log10)) +   geom_contour_filled(bins = 20) +   labs(title = \"Log Preservation Index\", fill = \"log10(PI)\") +    theme_bw() # Applying the Preservation Index on `mydata` mydata |>   mutate(PI = calcPI(Temp, RH)) |>   ggplot() +    geom_line(aes(Date, Temp), col = \"red\", alpha = 0.1) +   geom_line(aes(Date, RH), col = \"blue\", alpha = 0.1) +   geom_line(aes(Date, PI), col = \"hotpink\", size = 1) +    # add 20C and 50%RH reference line   geom_hline(yintercept = calcPI(20, 50), col = \"violet\", size = 1) +    labs(     title = \"Preservation Index\", x = NULL, y = NULL,     subtitle = \"Temperature (red), Humidity (blue), Preservation Index, years (pink)\") +   theme_bw() mydata |>   mutate(PI = calcPI(Temp, RH)) |>   ggplot() +    geom_density(aes(PI), fill = \"hotpink\", alpha = 0.4) +   # add 20C and 50%RH reference line   geom_vline(xintercept = calcPI(20, 50), col = \"violet\", size = 1) +    labs(title = \"Preservation Index\", x = NULL,        subtitle = \"20C and 50%RH reference line\") +   theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Conservation-tools.html","id":"equilibrium-moisture-content","dir":"Articles","previous_headings":"","what":"Equilibrium Moisture Content","title":"Conservation tools","text":"calcEMC_wood Equilibrium Moisture Content (EMC) determine ideal relative humidity storing materials, indicates point object neither gains loses moisture environment. Maintaining appropriate EMC levels prevents issues mold growth, warping, cracking, dimensional changes organic materials like wood, textiles, paper. Wood: safe EMC range wood typically 6% 20%. range helps prevent issues warping, cracking, mold growth, can occur moisture content falls exceeds levels. Simpson, W. T. (1998). “Equilibrium moisture content wood outdoor locations United States worldwide.” Res. Note FPL-RN-0268. U.S. Department Agriculture, Forest Service, Forest Products Laboratory. Hailwood, . J., & Horrobin, S. (1946). “Absorption water polymers.” Journal Society Chemical Industry, 65(12), 499-502.","code":"# EMC plotted at different temperature and relative humidity TRHgrid |>   mutate(EMC = calcEMC_wood(Temp, RH)) |>   ggplot(aes(Temp, RH, z = EMC)) +   geom_contour_filled(bins = 20) +   labs(title = \"Equilibrium Moisture Content (EMC)\", fill = \"EMC\") +    theme_bw() # EMC on `mydata` mydata |>   mutate(EMC = calcEMC_wood(Temp, RH)) |>   ggplot() +    geom_line(aes(Date, EMC), col = \"violet\", size = 1) +    labs(title = \"Equilibrium Moisture Content (EMC)\", x = NULL, y = \"EMC\") +   theme_bw() mydata |>   mutate(EMC = calcEMC_wood(Temp, RH)) |>   ggplot() +    geom_density(aes(EMC), fill = \"hotpink\", alpha = 0.4) +   geom_vline(xintercept = calcEMC_wood(20, 50), col = \"violet\", size = 1) +    labs(title = \"Equilibrium Moisture Content\", x = NULL,        subtitle = \"20C and 50%RH reference line\") +   theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"trhgrid-dataset-used-to-visualise-the-functions","dir":"Articles","previous_headings":"","what":"TRHgrid: Dataset used to visualise the functions","title":"Humidity functions","text":"grid temperature relative humidity values used analysis relationship derived variables. grid temperature humidity 0 100°C 0 100%RH 0.25°C 1%RH spacing. expand.grid() function creates complete factorial combination temperature relative humidity values, unique temperature-humidity pair represented..","code":"Temp <- seq(0, 100, 0.25) RH <- seq(0, 100, 1)  TRHgrid <-    expand.grid(Temp, RH) |>    tibble() |>    rename(Temp = Var1, RH = Var2)   summary(TRHgrid) #>       Temp           RH      #>  Min.   :  0   Min.   :  0   #>  1st Qu.: 25   1st Qu.: 25   #>  Median : 50   Median : 50   #>  Mean   : 50   Mean   : 50   #>  3rd Qu.: 75   3rd Qu.: 75   #>  Max.   :100   Max.   :100"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"examples-of-use-of-the-functions","dir":"Articles","previous_headings":"","what":"Examples of use of the functions","title":"Humidity functions","text":"Starting input data temperature relative humidity, wide range derived variables can computed. Using relationship temperature, absolute humidity dew point can used adjust relative humidity. functions can used combination determine adjustments needed reach target relative humidity. approach assumes constant pressure, typical indoor situations. Adjustment Methods: Increasing absolute humidity constant temperature increase RH. Decreasing absolute humidity constant temperature decrease RH. Decreasing temperature constant absolute humidity increase RH. Increasing temperature constant absolute humidity decrease RH. difference air temperature dew point indicates close air saturation. Adjusting temperature closer dew point increases RH, moving away decreases RH.","code":"# Functions applied on the mydata dataset head(mydata) |>    mutate(     Absolute_Humidity = calcAH(Temp, RH),      Dew_Point = calcDP(Temp, RH),      Mixing_Ratio = calcMR(Temp, RH),      Humidity_Ratio = calcHR(Temp, RH),     Enthalpy = calcEnthalpy(Temp, RH),      Saturation_Vapour_Pressure = calcPws(Temp),      Actual_Vapour_Pressure = calcPw(Temp, RH),      Air_Density = calcAD(Temp, RH),     Temp_calc = calcTemp(RH, Dew_Point),     RH_AH_calc = calcRH_AH(Temp, Absolute_Humidity),     RH_DP_calc = calcRH_DP(Temp, Dew_Point)   ) |>   glimpse() #> Rows: 6 #> Columns: 16 #> $ Site                       <chr> \"London\", \"London\", \"London\", \"London\", \"Lo… #> $ Sensor                     <chr> \"Room 1\", \"Room 1\", \"Room 1\", \"Room 1\", \"Ro… #> $ Date                       <dttm> 2024-01-01 00:00:00, 2024-01-01 00:15:00, … #> $ Temp                       <dbl> 21.8, 21.8, 21.8, 21.7, 21.7, 21.7 #> $ RH                         <dbl> 36.8, 36.7, 36.6, 36.6, 36.5, 36.2 #> $ Absolute_Humidity          <dbl> 7.052415, 7.033251, 7.014087, 6.973723, 6.9… #> $ Dew_Point                  <dbl> 6.383970, 6.344456, 6.304848, 6.216205, 6.1… #> $ Mixing_Ratio               <dbl> 5.959586, 5.943237, 5.926888, 5.890432, 5.8… #> $ Humidity_Ratio             <dbl> 0.8563133, 0.8559750, 0.8556350, 0.8548712,… #> $ Enthalpy                   <dbl> 37.16251, 37.12097, 37.07942, 36.88466, 36.… #> $ Saturation_Vapour_Pressure <dbl> 26.13122, 26.13122, 26.13122, 25.97199, 25.… #> $ Actual_Vapour_Pressure     <dbl> 9.616288, 9.590156, 9.564025, 9.505748, 9.4… #> $ Air_Density                <dbl> 1.196694, 1.196694, 1.196694, 1.197100, 1.1… #> $ Temp_calc                  <dbl> 21.8, 21.8, 21.8, 21.7, 21.7, 21.7 #> $ RH_AH_calc                 <dbl> 36.8, 36.7, 36.6, 36.6, 36.5, 36.2 #> $ RH_DP_calc                 <dbl> 36.8, 36.7, 36.6, 36.6, 36.5, 36.2 # Graph Absolute Humidity head(mydata) |>   graph_psychrometric(y_func = calcAH) +   theme_bw() # Changing Absolute Humidity  using_calcAH <- mydata |>    mutate(     # Absolute humidity, AH     AH = calcAH(Temp, RH),      # Dew point, DP     DP = calcDP(Temp, RH),      # Target RH     tRH = 50,                # AH*: AHstar new absolute humidity using the target relative humidity (tRH)     AHstar = calcAH(Temp, tRH),          # Difference in measured AH and AH*      dAH = AHstar - AH,      # Check     AHcheck = AHstar - (AH + dAH),      # RH*: RH star - the new RH using AH* and measured temperature     RHstarAH = calcRH_AH(Temp, AHstar),      # Difference from target     RHerrorAH = RHstarAH - tRH,    )   # Graph the results  using_calcAH |>   ggplot() +   geom_line(aes(Date, Temp), col = \"red\", alpha = 0.5) +   geom_line(aes(Date, RH), col = \"blue\", alpha = 0.5) +    geom_line(aes(Date, AH), col = \"green\", alpha = 0.5) +    geom_line(aes(Date, RHstarAH), col = \"darkblue\") + # should be a straight line (see below)   geom_line(aes(Date, AHstar), col = \"darkgreen\") +    labs(title = \"Using absolute humidity to adjust relative humidity\",         subtitle = \"Measure absolute humidity (light green), new absolute humidity (dark green),        resultant relative humidity (dark blue)\") +   theme_bw() # Plot the difference and check the error using_calcAH |>   ggplot() +   geom_line(aes(Date, dAH), col = \"darkgreen\") +    geom_line(aes(Date, RHerrorAH), col = \"darkblue\") + # should be a straight line (see below)   geom_smooth(aes(Date, dAH)) +    labs(title = \"Using absolute humidity to adjust relative humidity\",         subtitle = \"Positve values means adding humidity and vice-versa\") +   theme_bw() # Graph Air Density head(mydata) |>   graph_psychrometric(y_func = calcAD) +   theme_bw() # Changing Temperature using_calcTemp <-    mydata |>    mutate(     # Absolute humidity, AH     AH = calcAH(Temp, RH),      # Dew point, DP     DP = calcDP(Temp, RH),      # Target RH     tRH = 50,                # T*: Tstar new temperature at target RH      Tstar = calcTemp(tRH, DP),      # Difference in measure temperature and new temperature     dTemp = Tstar - Temp,      # Check     Tcheck = Tstar - (Temp + dTemp),      # RHstarT: New humidity with new temperature      RHstarT = calcRH_DP(Tstar, DP),     # Error      RHerrorT = RHstarT - tRH   )  # Graph the results  using_calcTemp |>   ggplot() +   geom_line(aes(Date, Temp), col = \"red\", alpha = 0.5) +   geom_line(aes(Date, RH), col = \"blue\", alpha = 0.5) +    geom_line(aes(Date, Tstar), col = \"darkred\") +   geom_line(aes(Date, RHstarT), col = \"darkblue\") +   labs(title = \"Using temperature to adjust relative humidity\") +   theme_bw() # Plot the difference and check the error using_calcTemp |>   ggplot() +   geom_line(aes(Date, dTemp), col = \"darkred\") +    geom_line(aes(Date, RHerrorT), col = \"darkblue\") + # should be a straight line (see below)   geom_smooth(aes(Date, dTemp)) +    labs(title = \"Using temperature to adjust relative humidity\",         subtitle = \"Positve values means increasing the temperature and vice-versa\") +   theme_bw() # Graph Dew Point head(mydata) |>   graph_psychrometric(y_func = calcDP) +   theme_bw() # Using Dew Point  using_calcDP <-    mydata |>   mutate(     # Absolute humidity, AH     AH = calcAH(Temp, RH),     # Dew point, DP     DP = calcDP(Temp, RH),     # Target RH     tRH = 50,     # DP*: DPstar new dew point at target RH      DPstar = calcDP(Temp, tRH),     # RH*: New relative humidity at new dew point     RHstarDP = calcRH_DP(Temp, DPstar),     # Difference in measured dew point and new dew point     dDP = DPstar - DP,      # Error      RHerrorDP = RHstarDP - tRH   )   using_calcDP |>   ggplot() +   geom_line(aes(Date, Temp), col = \"red\", alpha = 0.5) +   geom_line(aes(Date, RH), col = \"blue\", alpha = 0.5) +   geom_line(aes(Date, DP), col = \"hotpink\") +   geom_line(aes(Date, DPstar), col = \"purple\") +   geom_line(aes(Date, RHstarDP), col = \"darkblue\") +   labs(title = \"Using dew point to adjust relative humidity\") +   theme_bw() # Plot the difference and check the error using_calcDP |>   ggplot() +   geom_line(aes(Date, dDP), col = \"purple\") +    geom_line(aes(Date, RHerrorDP), col = \"darkblue\") + # should be a straight line (see below)   geom_smooth(aes(Date, dDP)) +    labs(title = \"Using dew point to adjust relative humidity\",         subtitle = \"Positve values means increasing the dew point and vice-versa\") +   theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"temperature","dir":"Articles","previous_headings":"","what":"Temperature","title":"Humidity functions","text":"calcTemp temperature calculations explored determine accuracy temperature derivation using dew point relative humidity. Visualisation temperature calculation original temperature relative humidity. temperature calculation presented filled contour plot calculated temperature using calcTemp dew point calculated using calcDP.  Visualisation temperature calculation original temperature relative humidity. plot aims validate accuracy consistency temperature calculations based relative humidity dew point.","code":"head(mydata) |> dplyr::mutate(DewPoint = calcDP(Temp, RH), Temp2 = calcTemp(RH, DewPoint)) #> # A tibble: 6 × 7 #>   Site   Sensor Date                 Temp    RH DewPoint Temp2 #>   <chr>  <chr>  <dttm>              <dbl> <dbl>    <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8     6.38  21.8 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7     6.34  21.8 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6     6.30  21.8 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6     6.22  21.7 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5     6.18  21.7 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2     6.06  21.7  TRHgrid |>   mutate(     DewPoint = calcDP(Temp, RH),     TempCalc = calcTemp(RH, DewPoint)   ) |>   ggplot(aes(Temp, RH, z = TempCalc)) +    geom_contour_filled(bins = 20, breaks = seq(-50, 100, 10)) +   labs(title = \"Calculated temperature vs actual\",         subtitle = \"calcDP(Temp, RH) > DewPoint > TempCalc\") +    theme_bw() TRHgrid |>   mutate(     DewPoint = calcDP(Temp, RH),     TempCalc = calcTemp(RH, DewPoint),      Temp_error = TempCalc - Temp   ) |>   ggplot(aes(Temp, RH, z = Temp_error)) +    geom_contour_filled(bins = 20) +    labs(title = \"Difference between calculated temperature vs actual\",         subtitle = \"calcDP(Temp, RH) > DewPoint > TempCalc - Temp (original)\") +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"relative-humidity","dir":"Articles","previous_headings":"","what":"Relative Humidity","title":"Humidity functions","text":"calcRH_AH calcRH_DP section investigates relative humidity calculations using derivations dew point absolute humidity. Contour plots demonstrate relationships calculated original relative humidity values errors.","code":"TRHgrid |>   mutate(     DewPoint = calcDP(Temp, RH),     RH_DPcalc = calcRH_DP(Temp, DewPoint)   ) |>   ggplot(aes(Temp, RH, z = RH_DPcalc)) +    geom_contour_filled(bins = 20, breaks = seq(0, 100, 5)) +    labs(title = \"Calculated humidity via dew point vs actual\",         subtitle = \"calcDP(Temp, RH) > DewPoint > RHcalc\") +    theme_bw() TRHgrid |>   mutate(     DewPoint = calcDP(Temp, RH),     RH_DPcalc = calcRH_DP(Temp, DewPoint),      RH_DP_error = RH_DPcalc - RH   ) |>   ggplot(aes(Temp, RH, z = RH_DP_error)) +    labs(title = \"Calculated humidity vs actual\",         subtitle = \"calcDP(Temp, RH) > DewPoint > RHcalc - RH (original)\") +   geom_contour_filled(bins = 20) +    theme_bw() TRHgrid |>   mutate(RH_AHcalc = calcRH_AH(Temp, calcAH(Temp, RH))) |>   ggplot(aes(Temp, RH, z = RH_AHcalc)) +    geom_contour_filled(bins = 20, breaks = seq(0, 100, 5)) +    labs(title = \"Calculated humidity via absolute humidity vs actual\",         subtitle = \"calcAH(Temp, RH) > Absolute humidity > RHcalc - RH (original)\") +   theme_bw() TRHgrid |>   mutate(RH_AH_error = calcRH_AH(Temp, calcAH(Temp, RH)) - RH) |>   ggplot(aes(Temp, RH, z = RH_AH_error)) +    labs(title = \"Calculated humidity via absolute humidity vs actual\",         subtitle = \"calcAH(Temp, RH) > Absolute humidity > RHcalc - RH (original)\") +   geom_contour_filled(bins = 20) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"absolute-humidity","dir":"Articles","previous_headings":"","what":"Absolute humidity","title":"Humidity functions","text":"calcAH graph shows absolute temperature varies changing temperature relative humidity.","code":"# Graph Absolute Humidity head(mydata) |>   graph_psychrometric(y_func = calcAH) +   theme_bw() TRHgrid |>   mutate(AH = calcAH(Temp, RH)) |>   ggplot(aes(Temp, RH, z = AH)) +    geom_contour_filled(bins = 20) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"specific-humidity","dir":"Articles","previous_headings":"","what":"Specific humidity","title":"Humidity functions","text":"calcSH","code":"# Graph Specific Humidity head(mydata) |>   graph_psychrometric(y_func = calcSH) +   theme_bw() TRHgrid |>   mutate(SpecificHumidity = calcSH(Temp, RH)) |>   ggplot(aes(Temp, RH, z = SpecificHumidity)) +    geom_contour_filled(bins = 20) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"dew-point","dir":"Articles","previous_headings":"","what":"Dew Point","title":"Humidity functions","text":"calcDP graphs shows dew point temperature varies changing temperature relative humidity.","code":"# Graph Dew Point head(mydata) |>   graph_psychrometric(y_func = calcDP) +   theme_bw() TRHgrid |>   mutate(DP = calcDP(Temp, RH)) |>   ggplot(aes(Temp, RH, z = DP)) +    geom_contour_filled(bins = 20) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"water-vapour-saturation-pressure","dir":"Articles","previous_headings":"","what":"Water vapour saturation pressure","title":"Humidity functions","text":"calcPws Saturation vapor pressure calculation","code":"# Graph Saturation vapor pressure  head(mydata) |>   graph_psychrometric(y_func = calcPws) +   theme_bw() TRHgrid |>   mutate(Pws = calcPws(Temp)) |>   ggplot(aes(Temp, RH, z = Pws)) +    geom_contour_filled(bins = 20) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"water-vapour-pressure","dir":"Articles","previous_headings":"","what":"Water vapour pressure","title":"Humidity functions","text":"calcPw Actual water vapor pressure determination","code":"# Graph Saturation vapor pressure  head(mydata) |>   graph_psychrometric(y_func = calcPw) +   theme_bw() TRHgrid |>   mutate(Pw = calcPw(Temp, RH)) |>   ggplot(aes(Temp, RH, z = Pw)) +    geom_contour_filled(bins = 20) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"mixing-ratio","dir":"Articles","previous_headings":"","what":"Mixing ratio","title":"Humidity functions","text":"calcMR","code":"# Graph Mixing Ratio head(mydata) |>   graph_psychrometric(y_func = calcMR) +   theme_bw() TRHgrid |>   mutate(MR = calcMR(Temp, RH)) |>   ggplot(aes(Temp, RH, z = MR)) +    geom_contour_filled(bins = 20) +    theme_bw() TRHgrid |>   mutate(MR_log10 = calcMR(Temp, RH) |> log10()) |>   ggplot(aes(Temp, RH, z = MR_log10)) +    geom_contour_filled(bins = 20) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"humidity-ratio","dir":"Articles","previous_headings":"","what":"Humidity ratio","title":"Humidity functions","text":"calcHR","code":"# Graph Humidity Ratio head(mydata) |>   graph_psychrometric(y_func = calcHR) +   theme_bw() TRHgrid |>   mutate(HumidityRatio = calcHR(Temp, RH)) |>   ggplot(aes(Temp, RH, z = HumidityRatio)) +    geom_contour_filled(bins = 20) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"air-density","dir":"Articles","previous_headings":"","what":"Air density","title":"Humidity functions","text":"calcAD","code":"# Graph Air Density head(mydata) |>   graph_psychrometric(y_func = calcAD) +   theme_bw() TRHgrid |>   mutate(AirDensity = calcAD(Temp, RH)) |>   ggplot(aes(Temp, RH, z = AirDensity)) +    geom_contour_filled(bins = 20) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/articles/Humidity-functions.html","id":"enthalpy","dir":"Articles","previous_headings":"","what":"Enthalpy","title":"Humidity functions","text":"calcEnthalpy","code":"# Graph Enthalpy head(mydata) |>   graph_psychrometric(y_func = calcEnthalpy) +   theme_bw() TRHgrid |>   mutate(Enthalpy = calcEnthalpy(Temp, RH)) |>   ggplot(aes(Temp, RH, z = Enthalpy)) +    geom_contour_filled(bins = 20) +    theme_bw() TRHgrid |>   mutate(Enthalpy_log10 = calcEnthalpy(Temp, RH) |> log10()) |>   ggplot(aes(Temp, RH, z = Enthalpy_log10)) +    geom_contour_filled(bins = 20) +    theme_bw()"},{"path":"https://bhavshah01.github.io/ConSciR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bhavesh Shah. Author, maintainer, copyright holder. Annelies Cosaert. Author. Vincent Beltran. Author. Emily R Long. Contributor. Marcin Zygmunt. Contributor.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shah B, Cosaert , Beltran V (2025). ConSciR: Tools Conservation Science. R package version 0.1.0, https://bhavshah01.github.io/ConSciR/.","code":"@Manual{,   title = {ConSciR: Tools for Conservation Science},   author = {Bhavesh Shah and Annelies Cosaert and Vincent Beltran},   year = {2025},   note = {R package version 0.1.0},   url = {https://bhavshah01.github.io/ConSciR/}, }"},{"path":"https://bhavshah01.github.io/ConSciR/index.html","id":"conscir","dir":"","previous_headings":"","what":"Tools for Conservation Science","title":"Tools for Conservation Science","text":"ConSciR R package provides data science tools conservation science. includes functions environmental applications, humidity calculations, sustainability metrics, engineering calculations, data visualisations psychrometric charts. toolkit designed assist conservators, scientists, engineers performing calculations, analysing data, streamlining common tasks cultural heritage conservation. ConSciR intended : - Conservators working museums, galleries, heritage sites - Conservation scientists, engineers, researchers - Data scientists developing applications conservation - Cultural heritage professionals involved preventive conservation - Students educators conservation heritage science programmes package also designed : - FAIR: Findable, Accessible, Interoperable, Reusable - Collaborative: enabling contributions, feature requests, bug reports, additions wider community using R first time, read article : Using R first time","code":""},{"path":"https://bhavshah01.github.io/ConSciR/index.html","id":"tools","dir":"","previous_headings":"","what":"Tools","title":"Tools for Conservation Science","text":"Humidity calculations, conservator tools, sustainability metrics. Mould growth models damage risk functions. Graphical outputs including temperature-relative humidity (TRH) plots, psychrometric charts data applications. Data tidying functions compatible Meaco Hanwell environmental monitoring devices. Interactive Shiny applications enabling dynamic data exploration visualisation.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Conservation Science","text":"can install development version ConSciR GitHub : --","code":"install.packages(\"pak\") pak::pak(\"BhavShah01/ConSciR\") # install.packages(\"devtools\") devtools::install_github(\"BhavShah01/ConSciR\")"},{"path":"https://bhavshah01.github.io/ConSciR/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Tools for Conservation Science","text":"section demonstrates common tasks can perform ConSciR package. Load packages Load ConSciR commonly used tidyverse packages data manipulation plotting. Access example dataset pre-loaded dataset (mydata) included testing demonstration. Use head() view first rows inspect data structure. Users can rename columns structure datasets similarly  mydata ensure compatibility ConSciR functions, expect variables temperature relative humidity specific column names. Perform calculations data Use ConSciR functions add environmental metrics dew point (calcDP), absolute humidity (calcAH), lifetime multiplier (calcLM), preservation index (calcPI) dataset. functions available; see package Reference details. Combine analysis visualisation Add dew point line temperature-relative humidity graph using package’s built-plotting function graph_TRH().  Conservator tools: mould growth estimation Calculate mould growth risk using calcMould_Zeng() visualise alongside humidity data.  Humidity functions: generate psychrometric chart Visualise dataset using psychrometric chart function graph_psychrometric(). first example shows basic plot, second demonstrates customise parameters data transparency, temperature humidity ranges, y-axis function. See full documentation  ?graph_psychrometric.","code":"library(ConSciR) library(dplyr) library(ggplot2) # My TRH data head(mydata) #> # A tibble: 6 × 5 #>   Site   Sensor Date                 Temp    RH #>   <chr>  <chr>  <dttm>              <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2 # Peform calculations head(mydata) |>   mutate(     DewP = calcDP(Temp, RH),      Abs = calcAH(Temp, RH),      LifeTime = calcLM(Temp, RH, EA = 100),      PI = calcPI(Temp, RH)     ) #> # A tibble: 6 × 9 #>   Site   Sensor Date                 Temp    RH  DewP   Abs LifeTime    PI #>   <chr>  <chr>  <dttm>              <dbl> <dbl> <dbl> <dbl>    <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8  6.38  7.05     1.11  45.3 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7  6.34  7.03     1.11  45.4 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6  6.30  7.01     1.11  45.5 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6  6.22  6.97     1.11  46.1 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5  6.18  6.95     1.11  46.2 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2  6.06  6.90     1.11  46.6 mydata |>   mutate(DewPoint = calcDP(Temp, RH)) |>   graph_TRH() +    geom_line(aes(Date, DewPoint), col = \"purple\") + # add dewpoint line in purple   theme_minimal() mydata |>   mutate(Mould = calcMould_Zeng(Temp, RH)) |>   ggplot() +   geom_line(aes(Date, RH), col = \"blue\") +   geom_line(aes(Date, Mould), col = \"darkgreen\", size = 1) +   labs(title = \"Mould Growth Rate Limits\",         y = \"Humidity (blue) and Mould Limit (green)\") +    theme_bw() # Basic mydata |>   graph_psychrometric() # Customise  mydata |>   graph_psychrometric(     data_alpha = 0.2,     LowT = 8,      HighT = 28,     LowRH = 30,     HighRH = 70,     y_func = calcAH     ) +   theme_classic()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/ConSciR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ConSciR: Tools for Conservation Science — ConSciR-package","title":"ConSciR: Tools for Conservation Science — ConSciR-package","text":"Provides data science tools conservation science, including methods environmental analysis applications, humidity calculations, sustainability metrics, engineering calculations, data visualisation. Supports conservators, scientists, engineers working cultural heritage data.","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/ConSciR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ConSciR: Tools for Conservation Science — ConSciR-package","text":"Maintainer: Bhavesh Shah bhaveshshah01@gmail.com (ORCID) [copyright holder] Authors: Annelies Cosaert (ORCID) Vincent Beltran contributors: Emily R Long (ORCID) [contributor] Marcin Zygmunt (ORCID) [contributor]","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/TRHdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Climate dataset to demonstrate functions — TRHdata","title":"Climate dataset to demonstrate functions — TRHdata","text":"climate dataset use demonstrate functions work.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/TRHdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Climate dataset to demonstrate functions — TRHdata","text":"","code":"TRHdata"},{"path":"https://bhavshah01.github.io/ConSciR/reference/TRHdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Climate dataset to demonstrate functions — TRHdata","text":"data frame 35,136 rows 5 columns: Site, Sensor Sensor location name Date Date ISOdate time format Temp, RH Temperature (C) relative humidity (%)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/TRHdata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Climate dataset to demonstrate functions — TRHdata","text":"Climate","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAD.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Air Density — calcAD","title":"Calculate Air Density — calcAD","text":"Function calculate air density based temperature (°C), relative humidity (%), atmospheric pressure (hPa).","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Air Density — calcAD","text":"","code":"calcAD(Temp, RH, P_atm = 1013.25, R_dry = 287.058, R_vap = 461.495, ...)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Air Density — calcAD","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%) P_atm Atmospheric pressure = 1013.25 (hPa) R_dry Specific gas constant dry air = 287.058 (J/(kg·K)) R_vap Specific gas constant water vapor = 461.495 (J/(kg·K)) ... Addtional arguments  supply calcPws","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Air Density — calcAD","text":"Air density kg/m³","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Air Density — calcAD","text":"","code":"calcAD(20, 50) #> [1] 1.204032  head(mydata) |> dplyr::mutate(AirDensity = calcAD(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH AirDensity #>   <chr>  <chr>  <dttm>              <dbl> <dbl>      <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8       1.20 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7       1.20 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6       1.20 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6       1.20 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5       1.20 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2       1.20"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAH.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Absolute Humidity — calcAH","title":"Calculate Absolute Humidity — calcAH","text":"Function calculate absolute humidity (g/m³) temperature (°C) relative humidity (%). Absolute humidity mass water unit volume air given temperature pressure.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Absolute Humidity — calcAH","text":"","code":"calcAH(Temp, RH, P_atm = 1013.25)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Absolute Humidity — calcAH","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%) P_atm Atmospheric pressure = 1013.25 (hPa)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Absolute Humidity — calcAH","text":"AH Absolute Humidity (g/m³)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAH.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Absolute Humidity — calcAH","text":"Buck, . L. (1981). New equations computing vapor pressure enhancement factor. Journal Applied Meteorology, 20(12), 1527-1532.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcAH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Absolute Humidity — calcAH","text":"","code":"calcAH(20, 50) #> [1] 8.630534  head(mydata) |> dplyr::mutate(Abs = calcAH(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH   Abs #>   <chr>  <chr>  <dttm>              <dbl> <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8  7.05 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7  7.03 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6  7.01 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6  6.97 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5  6.95 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2  6.90"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingCapacity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cooling Capacity — calcCoolingCapacity","title":"Calculate Cooling Capacity — calcCoolingCapacity","text":"function calculates required cooling capacity based power consumption, power factor, safety factor, efficiency. Cooling capacity amount energy transferred cooling process.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingCapacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cooling Capacity — calcCoolingCapacity","text":"","code":"calcCoolingCapacity(   Power,   power_factor = 0.85,   safety_factor = 1.2,   efficiency = 0.7 )"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingCapacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cooling Capacity — calcCoolingCapacity","text":"Power Power consumption Watts (W). power_factor Power factor, default 0.85. safety_factor Safety factor, default 1.2 (20% extra capacity). efficiency Efficiency cooling system, default 0.7 (70%).","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingCapacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cooling Capacity — calcCoolingCapacity","text":"Required cooling capacity kilowatts (kW).","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingCapacity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cooling Capacity — calcCoolingCapacity","text":"","code":"calcCoolingCapacity(1000) #> [1] 1.457143  calcCoolingCapacity(1500, power_factor = 0.9, safety_factor = 1.3, efficiency = 0.8) #> [1] 2.19375"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingPower.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Cooling Power — calcCoolingPower","title":"Calculate Cooling Power — calcCoolingPower","text":"function calculates cooling power based initial final air conditions volume flow rate. Cooling power rate energy transferred cooling process.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingPower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Cooling Power — calcCoolingPower","text":"","code":"calcCoolingPower(Temp1, Temp2, RH1, RH2, volumeFlowRate)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingPower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Cooling Power — calcCoolingPower","text":"Temp1 Initial Temperature (°Celsius) Temp2 Final Temperature (°Celsius) RH1 Initial Relative Humidity (0-100%) RH2 Final Relative Humidity (0-100%) volumeFlowRate Volume flow rate air (m³/s)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingPower.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Cooling Power — calcCoolingPower","text":"Cooling power kilowatts (kW)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingPower.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Cooling Power — calcCoolingPower","text":"ASHRAE Handbook Fundamentals","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcCoolingPower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Cooling Power — calcCoolingPower","text":"","code":"calcCoolingPower(30, 22, 70, 55, 0.8) #> [1] 0.03084615  calcCoolingPower(Temp1 = 25, Temp2 = 20, RH1 = 70, RH2 = 50, volumeFlowRate = 0.5) #> [1] 0.01307436"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcDP.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Dew Point — calcDP","title":"Calculate Dew Point — calcDP","text":"Function calculate dew point (°C) temperature (°C) relative humidity (%).","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcDP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Dew Point — calcDP","text":"","code":"calcDP(Temp, RH)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcDP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Dew Point — calcDP","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcDP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Dew Point — calcDP","text":"Td, Dew Point (°Celsius)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcDP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Dew Point — calcDP","text":"dew point calculated using following equation derived August-Roche-Magnus approximation: $$T_d\\left(DewP\\right)=\\frac{234.04\\times\\log\\left(\\frac{RH}{100}\\right)+\\frac{17.625\\times Temp}{243.04+Temp}}{17.625-\\log\\left(\\frac{RH}{100}\\right)-\\frac{17.625\\times Temp}{243.04+Temp}}$$ : T_d dew point temperature degrees Celsius. Temp air temperature degrees Celsius. RH relative humidity percent. Calculation valid : 0°C < T < 60°C 1% < RH < 100% 0°C < Td < 50°C","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcDP.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Dew Point — calcDP","text":"Arden Buck equation also available source R code.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcDP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Dew Point — calcDP","text":"Alduchov, O. ., R. E. Eskridge, 1996: Improved Magnus' form approximation saturation vapor pressure. J. Appl. Meteor., 35, 601–609 https://bmcnoldy.earth.miami.edu/Humidity.html","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcDP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Dew Point — calcDP","text":"","code":"calcDP(20, 50) #> [1] 9.261107  calcDP(20, calcRH_AH(20, calcAH(20, 50))) #> [1] 9.261107  head(mydata) |> dplyr::mutate(DewPoint = calcDP(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH DewPoint #>   <chr>  <chr>  <dttm>              <dbl> <dbl>    <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8     6.38 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7     6.34 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6     6.30 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6     6.22 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5     6.18 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2     6.06"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEMC_wood.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Equilibrium Moisture Content for wood (EMC) — calcEMC_wood","title":"Calculate Equilibrium Moisture Content for wood (EMC) — calcEMC_wood","text":"function calculates Equilibrium Moisture Content (EMC) wood based relative humidity temperature. Equilibrium Moisture Content (EMC) moisture content material, wood hygroscopic substanceshas reached equilibrium environment longer gaining losing moisture specific temperature relative humidity.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEMC_wood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Equilibrium Moisture Content for wood (EMC) — calcEMC_wood","text":"","code":"calcEMC_wood(Temp, RH)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEMC_wood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Equilibrium Moisture Content for wood (EMC) — calcEMC_wood","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEMC_wood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Equilibrium Moisture Content for wood (EMC) — calcEMC_wood","text":"EMC, Equilibrium Moisture Content (0-100%)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEMC_wood.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Equilibrium Moisture Content for wood (EMC) — calcEMC_wood","text":"Simpson, W. T. (1998). Equilibrium moisture content wood outdoor locations United States worldwide. Res. Note FPL-RN-0268. Madison, WI: U.S. Department Agriculture, Forest Service, Forest Products Laboratory. Hailwood, . J., Horrobin, S. (1946). Absorption water polymers: Analysis terms simple model. Transactions Faraday Society 42, B084-B092. DOI:10.1039/TF946420B084","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEMC_wood.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Equilibrium Moisture Content for wood (EMC) — calcEMC_wood","text":"","code":"calcEMC_wood(20, 50) #> [1] 9.271141  head(mydata) |> dplyr::mutate(EMC = calcEMC_wood(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH   EMC #>   <chr>  <chr>  <dttm>              <dbl> <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8  7.20 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7  7.19 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6  7.17 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6  7.17 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5  7.16 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2  7.11"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEnthalpy.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Enthalpy — calcEnthalpy","title":"Calculate Enthalpy — calcEnthalpy","text":"Function calculate enthalpy temperature (°C) relative humidity (%). Enthalpy total heat content air, combining sensible (related temperature) latent heat (related moisture content), used HVAC calculations. Enthalpy amount energy required bring gas current state dry gas 0°C.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEnthalpy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Enthalpy — calcEnthalpy","text":"","code":"calcEnthalpy(Temp, RH, ...)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEnthalpy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Enthalpy — calcEnthalpy","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%) ... Additional arguments supply calcPws","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEnthalpy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Enthalpy — calcEnthalpy","text":"h Enthalpy (kJ/kg)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcEnthalpy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Enthalpy — calcEnthalpy","text":"","code":"calcEnthalpy(20, 50) #> [1] 38.6333  head(mydata) |> dplyr::mutate(Enthalpy = calcEnthalpy(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH Enthalpy #>   <chr>  <chr>  <dttm>              <dbl> <dbl>    <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8     37.2 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7     37.1 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6     37.1 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6     36.9 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5     36.8 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2     36.7"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcFtoC.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert temperature (F) to temperature (C) — calcFtoC","title":"Convert temperature (F) to temperature (C) — calcFtoC","text":"Convert temperature Fahrenheit temperature Celsius","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcFtoC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert temperature (F) to temperature (C) — calcFtoC","text":"","code":"calcFtoC(TempF)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcFtoC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert temperature (F) to temperature (C) — calcFtoC","text":"TempF Temperature (Fahrenheit )","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcFtoC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert temperature (F) to temperature (C) — calcFtoC","text":"TempC Temperature (Celsius)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcFtoC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert temperature (F) to temperature (C) — calcFtoC","text":"","code":"calcFtoC(32) #> [1] 0 calcFtoC(68) #> [1] 20  head(mydata) |> dplyr::mutate(TempC = calcFtoC((Temp * 9/5) + 32)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH TempC #>   <chr>  <chr>  <dttm>              <dbl> <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8  21.8 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7  21.8 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6  21.8 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6  21.7 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5  21.7 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2  21.7"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcHR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Humidity Ratio — calcHR","title":"Calculate Humidity Ratio — calcHR","text":"Function calculate humidity ratio (g/kg) temperature (°C) relative humidity (%). Humidity ratio mass water vapor present given volume air relative mass dry air. Function uses calcMR","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcHR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Humidity Ratio — calcHR","text":"","code":"calcHR(Temp, RH, P_atm = 1013.25, B = 621.9907)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcHR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Humidity Ratio — calcHR","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%) P_atm Atmospheric pressure = 1013.25 (hPa) B B = 621.9907 g/kg air","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcHR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Humidity Ratio — calcHR","text":"HR Humidity ratio (g/kg)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcHR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Humidity Ratio — calcHR","text":"function uses following steps: 1. Calculate mixing ratio using calcMR function. 2. Convert mixing ratio humidity ratio using formula: HR = MR / (1 + MR) MR mixing ratio HR humidity ratio. Note: function requires calcMR function available environment.","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcHR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Humidity Ratio — calcHR","text":"","code":"calcHR(20, 50) #> [1] 0.8789858  head(mydata) |> dplyr::mutate(HumidityRatio = calcHR(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH HumidityRatio #>   <chr>  <chr>  <dttm>              <dbl> <dbl>         <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8         0.856 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7         0.856 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6         0.856 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6         0.855 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5         0.855 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2         0.853"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcLM.html","id":null,"dir":"Reference","previous_headings":"","what":"Life-time multiplier for chemical degradation — calcLM","title":"Life-time multiplier for chemical degradation — calcLM","text":"Function calculate lifetime multiplier temperature relative humidity. lifetime multiplier calculates expected lifetime object given point relative lifetime 20°C 50%RH. can used average length dataset. lifetime multiplier gives indication speed natural decay object. expresses expected lifetime object compared expected lifetime object 20°C 50% RH. means result = 1, expected lifetime object 'good'. closer go 0, less suited environment . result expressed numerically time, also gives idea period year object suffers . data based experiments paper, synthetic films dyes.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcLM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Life-time multiplier for chemical degradation — calcLM","text":"","code":"calcLM(Temp, RH, EA = 100)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcLM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Life-time multiplier for chemical degradation — calcLM","text":"Temp Temperature (Celsius) RH Relative Humidity (0-100%) EA Activation Energy (J/mol). 100 J/mol cellulosic (paper) 70 J/mol yellowing varnish","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcLM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Life-time multiplier for chemical degradation — calcLM","text":"Lifetime multiplier","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcLM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Life-time multiplier for chemical degradation — calcLM","text":"Based experiments rate decay paper, films dyes. Activation energy, Ea = 100 J/mol (degradation cellulose - paper), 70 J/mol (yellowing varnish - furniture, painting, sculpture). Gas constant, R = 8.314 J/K.mol $$LM=\\left(\\frac{50\\%RH}{RH}\\right)^{1.3}.e\\left(\\frac{E_a}{R}.\\left(\\frac{1}{T_K}-\\frac{1}{293}\\right)\\right)$$","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcLM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Life-time multiplier for chemical degradation — calcLM","text":"Michalski, S., ‘Double life five-degree drop, double life halving relative humidity’, Preprints 13th IcOM-cc Triennial Meeting rio de Janeiro (22–27 September 2002), ed. r. Vontobel, James & James, London (2002) Vol. 66–72. Martens Marco, 2012: Climate Risk Assessment Museums (Thesis, Tue).","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcLM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Life-time multiplier for chemical degradation — calcLM","text":"","code":"calcLM(20, 50) #> [1] 1  calcLM(20, 50, EA = 70) #> [1] 1  head(mydata) |> dplyr::mutate(LifeTime = calcLM(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH LifeTime #>   <chr>  <chr>  <dttm>              <dbl> <dbl>    <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8     1.11 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7     1.11 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6     1.11 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6     1.11 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5     1.11 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2     1.11  head(mydata) |>   dplyr::mutate(LM = calcLM(Temp, RH)) |>    dplyr::summarise(LM_avg = mean(LM, na.rm = TRUE)) #> # A tibble: 1 × 1 #>   LM_avg #>    <dbl> #> 1   1.11"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mixing Ratio — calcMR","title":"Calculate Mixing Ratio — calcMR","text":"Function calculate mixing ratio (g/kg) temperature (°C) relative humidity (%). Mixing Ratio ratio water vapour mass mass dry gas.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mixing Ratio — calcMR","text":"","code":"calcMR(Temp, RH, P_atm = 1013.25, B = 621.9907, ...)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mixing Ratio — calcMR","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%) P_atm Atmospheric pressure = 1013.25 (hPa) B B = 621.9907 g/kg air ... Additional arguments supply calcPws","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mixing Ratio — calcMR","text":"X Mixing ratio, mass water vapour / mass dry gas (g/kg)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Mixing Ratio — calcMR","text":"X Mixing ratio (mass water vapour / mass dry gas) Pw = Pws(40°C) = 73.75 hPa X = 621.9907 x 73.75 / (998 - 73.75) = 49.63 g/kg","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Mixing Ratio — calcMR","text":"","code":"calcMR(20, 50) #> [1] 7.263496  head(mydata) |> dplyr::mutate(MixingRatio = calcMR(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH MixingRatio #>   <chr>  <chr>  <dttm>              <dbl> <dbl>       <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8        5.96 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7        5.94 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6        5.93 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6        5.89 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5        5.87 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2        5.83"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_VTT.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mould Growth Index (VTT model) — calcMould_VTT","title":"Calculate Mould Growth Index (VTT model) — calcMould_VTT","text":"function calculates mould growth index wooden materials based temperature, relative humidity, factors. implements mathematical model developed Hukka Viitanen, predicts mould growth varying environmental conditions.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_VTT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mould Growth Index (VTT model) — calcMould_VTT","text":"","code":"calcMould_VTT(   Temp,   RH,   M_prev = 0,   sensitivity = \"very\",   wood = 0,   surface = 0 )"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_VTT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mould Growth Index (VTT model) — calcMould_VTT","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%) M_prev previous mould index value (default 0). sensitivity sensitivity level material mould growth. Options '', 'sensitive', 'medium', 'resistant'. Default ''. wood wood species; 0 pine 1 spruce. Default 0. surface surface quality; 0 resawn kiln dried timber 1 timber dried normal kiln drying process. Default 0 (worst case).","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_VTT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mould Growth Index (VTT model) — calcMould_VTT","text":"M Mould growth index 0 = mould growth 1 = Small amounts mould growth surface visible microscope 2 = Several local mould growth colonies surface visible microscope 3 = Visual findings mould surface <10% coverage 50% coverage microsocpe 4 = Visual findings mould surface 10-50% coverage >50% coverage microscope 5 = Plenty growth surface >50% visual coverage 6 = Heavy tight growth, coverage almost 100%","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_VTT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Mould Growth Index (VTT model) — calcMould_VTT","text":"Senstivity related material surface, mould grow . Options function avaiable : '' sensitive materials include pine sapwood. 'sensitive' materials include glued wooden boards, PUR paper surface, spruce 'medium' resistant materials include concrete, glass wool, polyester wool 'resistant' materials include PUR polished surface","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_VTT.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Mould Growth Index (VTT model) — calcMould_VTT","text":"Hukka, ., Viitanen, H. mathematical model mould growth wooden material. Wood Science Technology 33, 475–485 (1999). https://doi.org/10.1007/s002260050131 Viitanen, Hannu, Tuomo Ojanen. \"Improved model predict mold growth building materials.\" Thermal Performance Exterior Envelopes Whole Buildings X–Proceedings CD (2007): 2-7.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_VTT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Mould Growth Index (VTT model) — calcMould_VTT","text":"","code":"calcMould_VTT(Temp = 25, RH = 85) #> [1] 0.01838254  calcMould_VTT(Temp = 18, RH = 70, M_prev = 2, sensitivity = \"medium\", wood = 1, surface = 1) #> [1] 2.001801  head(mydata) |>    dplyr::mutate(       MouldIndex = calcMould_VTT(Temp, RH),       MouldIndex_sensitve = calcMould_VTT(Temp, RH, sensitivity = \"sensitive\")    ) #> # A tibble: 6 × 7 #>   Site   Sensor Date                 Temp    RH MouldIndex MouldIndex_sensitve #>   <chr>  <chr>  <dttm>              <dbl> <dbl>      <dbl>               <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8          0                   0 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7          0                   0 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6          0                   0 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6          0                   0 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5          0                   0 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2          0                   0"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_Zeng.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mould Growth Rate Limits (Zeng et al.) — calcMould_Zeng","title":"Calculate Mould Growth Rate Limits (Zeng et al.) — calcMould_Zeng","text":"function calculates Lowest Isoline Mould (LIM) based temperature relative humidity, using model developed Zeng et al. (2023). LIM lowest envelope temperature humidity isoline certain mould growth rate (u). LIM0 critical value mould growth, humidity kept critcal value, given temperature, risk mould growth.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_Zeng.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mould Growth Rate Limits (Zeng et al.) — calcMould_Zeng","text":"","code":"calcMould_Zeng(Temp, RH, LIM = 0, label = FALSE)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_Zeng.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mould Growth Rate Limits (Zeng et al.) — calcMould_Zeng","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%) LIM specific LIM value calculate. Must one 0, 0.1, 0.5, 1, 2, 3, 4. Default 0. label Logical. TRUE, returns descriptive label instead numeric value. Default FALSE.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_Zeng.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mould Growth Rate Limits (Zeng et al.) — calcMould_Zeng","text":"label FALSE, returns calculated LIM value Relative Humidity (0-100%).         label TRUE, returns character string describing mould growth rate category.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_Zeng.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Mould Growth Rate Limits (Zeng et al.) — calcMould_Zeng","text":"function calculates LIM values mould genera including Cladosporium, Penicillium, Aspergillus. LIM values represent different mould growth rates: LIM0: Low limit mould growth LIM0.1: 0.1 mm/day growth rate LIM0.5: 0.5 mm/day growth rate LIM1: 1 mm/day growth rate LIM2: 2 mm/day growth rate LIM3: 3 mm/day growth rate LIM4: 4 mm/day growth rate LIM4: Greater 4 mm/day growth rate (9 mm/day theorectical maximum)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_Zeng.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Mould Growth Rate Limits (Zeng et al.) — calcMould_Zeng","text":"Zeng L, Chen Y, Ma M, et al. Prediction mould growth rate within building envelopes: development validation improved model. Building Services Engineering Research Technology. 2023;44(1):63-79. doi:10.1177/01436244221137846 Sautour M, Dantigny P, Divies C, Bensoussan M. temperature-type model describing relationship fungal growth water activity. Int J Food Microbiol. 2001 Jul 20;67(1-2):63-9. doi: 10.1016/s0168-1605(01)00471-8. PMID: 11482570.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcMould_Zeng.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Mould Growth Rate Limits (Zeng et al.) — calcMould_Zeng","text":"","code":"calcMould_Zeng(20, 75) #> [1] 75.61875 calcMould_Zeng(20, 75, LIM = 0) #> [1] 75.61875 calcMould_Zeng(20, 75, label = TRUE) #> [1] 0  calcMould_Zeng(20, 85) #> [1] 75.61875 calcMould_Zeng(20, 85, LIM = 2) #> [1] 86.58875 calcMould_Zeng(20, 85, label = TRUE) #> [1] 2  head(mydata) |>    dplyr::mutate(       RH_LIM0 = calcMould_Zeng(Temp, RH),       RH_LIM1 = calcMould_Zeng(Temp, RH, LIM = 1),       LIM = calcMould_Zeng(Temp, RH, label = TRUE)    ) #> # A tibble: 6 × 8 #>   Site   Sensor Date                 Temp    RH RH_LIM0 RH_LIM1   LIM #>   <chr>  <chr>  <dttm>              <dbl> <dbl>   <dbl>   <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8    75.1    83.1     0 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7    75.1    83.1     0 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6    75.1    83.1     0 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6    75.1    83.1     0 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5    75.1    83.1     0 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2    75.1    83.1     0"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPI.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Preservation Index — calcPI","title":"Calculate Preservation Index — calcPI","text":"Calculates Preservation Index (PI) estimate natural decay speed objects. Uses acetate film reference early warning chemical deterioration organic synthetic objects. Results years data point, showing periods higher lower risk. Model based acetate films similarly unstable objects specific temperature relative humidity conditions. model less reliable high low RH values.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Preservation Index — calcPI","text":"","code":"calcPI(Temp, RH, EA = 90300)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Preservation Index — calcPI","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%) EA Activation Energy (J/mol). Default 90300 J/mol cellulose acetate film","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Preservation Index — calcPI","text":"PI Preservation Index, expected lifetime (1/rate,k)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPI.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Preservation Index — calcPI","text":"formula based Arrhenius equation (molecular energy) equivalent E (best fit cellulose triacetate deterioration data). parameters integrated mimic results experiments. result average chemical lifetime one point time chemically unstable object (based experiments acetate film). means expected lifetime specific T, RH theoretical object remains stable (fluctuations). chosen activation energy (Ea) larger impact low temperature. Developed Image Permance Institute, model based chemical degradation cellulose acetate (Reilly et al., 1995): -  Rate, k = [RH%] × 5.9 × 10^12 × exp(-90300 / (8.314 × TempK)) -  Preservation Index, PI = 1/k","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPI.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Preservation Index — calcPI","text":"metric early version lifetime multiplier based chemical deterioration acetate film. last object naturally relatively unstable lies biggest difference chemical metrics together fact relative lifetime object. lifetime multipliers give similar results 20% 60% RH. results low high RH can unreliable.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Preservation Index — calcPI","text":"Reilly, James M. New Tools Preservation: Assessing Long-Term Environmental Effects Library Archives Collections. Commission Preservation Access, 1400 16th Street, NW, Suite 740, Washington, DC 20036-2217, 1995. Padfield, T. 2004. Preservation Index Time Weighted Preservation Index. https://www.conservationphysics.org/twpi/twpi_01.html Activation Energy: ASHRAE, 2011. Image Permanence Institute, eClimateNotebook","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Preservation Index — calcPI","text":"","code":"calcPI(20, 50) #> [1] 41.76134  head(mydata) |> dplyr::mutate(PI = calcPI(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH    PI #>   <chr>  <chr>  <dttm>              <dbl> <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8  45.3 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7  45.4 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6  45.5 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6  46.1 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5  46.2 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2  46.6"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPw.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Water Vapour Pressure — calcPw","title":"Calculate Water Vapour Pressure — calcPw","text":"Function calculate water vapour pressure (hPa) temperature (°C) relative humidity (%). Water vapour pressure pressure exerted water vapour gas.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Water Vapour Pressure — calcPw","text":"","code":"calcPw(Temp, RH, ...)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Water Vapour Pressure — calcPw","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%) ... Additional arguments supply calcPws","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Water Vapour Pressure — calcPw","text":"Pw, Water Vapour Pressure (hPa)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Water Vapour Pressure — calcPw","text":"water vapor pressure (P_w) calculated using following equation: $$P_w=\\frac{P_{ws}\\left(Temp\\right)\\times RH}{100}$$ : P_ws saturation vapor pressure using calcPws. RH relative humidity percent. Temp temperature degrees Celsius.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Water Vapour Pressure — calcPw","text":"Wagner, W., & Pru\\ß, . (2002). IAPWS formulation 1995 thermodynamic properties ordinary water substance general scientific use. Journal Physical Chemical Reference Data, 31(2), 387-535. Alduchov, O. ., R. E. Eskridge, 1996: Improved Magnus' form approximation saturation vapor pressure. J. Appl. Meteor., 35, 601-609.","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Water Vapour Pressure — calcPw","text":"","code":"calcPw(20, 50) #> [1] 11.69597  # Calculate relative humidity at 50%RH calcPw(20, 50) / calcPws(20) * 100 #> [1] 50  head(mydata) |> dplyr::mutate(Pw = calcPw(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH    Pw #>   <chr>  <chr>  <dttm>              <dbl> <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8  9.62 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7  9.59 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6  9.56 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6  9.51 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5  9.48 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2  9.40"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPws.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Water Vapour Saturation Pressure — calcPws","title":"Calculate Water Vapour Saturation Pressure — calcPws","text":"Function calculate water vapour saturation pressure (hPa) temperature (°C) using International Association Properties Water Steam (IAPWS default) August-Roche-Magnus approximation. Water vapour saturation pressure maximum partial pressure water vapour can present gas given temperature.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Water Vapour Saturation Pressure — calcPws","text":"","code":"calcPws(Temp, P_atm = 1013.25, method = \"IAPWS\")"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Water Vapour Saturation Pressure — calcPws","text":"Temp Temperature (°Celsius) P_atm Atmospheric pressure = 1013.25 (hPa) method Character. Method use calculation. Options \"IAPWS\" (default) \"Magnus\".","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Water Vapour Saturation Pressure — calcPws","text":"Pws, Saturation vapor pressure (hPa)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPws.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Water Vapour Saturation Pressure — calcPws","text":"lower accuracy limited temperature range can tolerated simpler formula can used water vapour saturation pressure water (ice): Pws = 6.116441 x 10^( (7.591386 x Temp) / (Temp + 240.7263) )","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPws.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Water Vapour Saturation Pressure — calcPws","text":"Wagner, W., & Pru\\ß, . (2002). IAPWS formulation 1995 thermodynamic properties ordinary water substance general scientific use. Journal Physical Chemical Reference Data, 31(2), 387-535. Alduchov, O. ., R. E. Eskridge, 1996: Improved Magnus' form approximation saturation vapor pressure. J. Appl. Meteor., 35, 601-609.","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcPws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Water Vapour Saturation Pressure — calcPws","text":"","code":"calcPws(20) #> [1] 23.39194  calcPws(20, method = \"IAPWS\") #> [1] 23.39194 calcPws(20, method = \"Magnus\") #> [1] 23.33441  # Calculate relative humidity at 50%RH calcPw(20, 50) / calcPws(20, method = \"IAPWS\") * 100 #> [1] 50 calcPw(20, 50) / calcPws(20, method = \"Magnus\") * 100 #> [1] 50.12328  head(mydata) |> dplyr::mutate(Pws = calcPws(Temp)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH   Pws #>   <chr>  <chr>  <dttm>              <dbl> <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8  26.1 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7  26.1 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6  26.1 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6  26.0 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5  26.0 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2  26.0"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_AH.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Relative Humidity from temperature and absolute humidity — calcRH_AH","title":"Calculate Relative Humidity from temperature and absolute humidity — calcRH_AH","text":"Function calculate relative humidity (%) temperature (°C) absolute humidity (g/m^3)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_AH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Relative Humidity from temperature and absolute humidity — calcRH_AH","text":"","code":"calcRH_AH(Temp, Abs, P_atm = 1013.25)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_AH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Relative Humidity from temperature and absolute humidity — calcRH_AH","text":"Temp Temperature (°Celsius) Abs Absolute Humidity (g/m³) P_atm Atmospheric pressure = 1013.25 (hPa)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_AH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Relative Humidity from temperature and absolute humidity — calcRH_AH","text":"Relative Humidity (0-100%)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_AH.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Relative Humidity from temperature and absolute humidity — calcRH_AH","text":"Buck, . L. (1981). New equations computing vapor pressure enhancement factor. Journal Applied Meteorology, 20(12), 1527-1532.","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_AH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Relative Humidity from temperature and absolute humidity — calcRH_AH","text":"","code":"# Calculate RH for temperature of 20°C and absolute humidity of 8.645471 g/m³ calcRH_AH(20, 8.630534) #> [1] 50  calcRH_AH(20, calcAH(20, 50)) #> [1] 50  head(mydata) |> dplyr::mutate(Abs = calcAH(Temp, RH), RH2 = calcRH_AH(Temp, Abs)) #> # A tibble: 6 × 7 #>   Site   Sensor Date                 Temp    RH   Abs   RH2 #>   <chr>  <chr>  <dttm>              <dbl> <dbl> <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8  7.05  36.8 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7  7.03  36.7 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6  7.01  36.6 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6  6.97  36.6 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5  6.95  36.5 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2  6.90  36.2"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_DP.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Relative Humidity from temperature and dew point — calcRH_DP","title":"Calculate Relative Humidity from temperature and dew point — calcRH_DP","text":"Function calculate relative humidity (%) temperature (°C) dew point (°C)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_DP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Relative Humidity from temperature and dew point — calcRH_DP","text":"","code":"calcRH_DP(Temp, DewP)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_DP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Relative Humidity from temperature and dew point — calcRH_DP","text":"Temp Temperature (°Celsius) DewP Td, Dew Point (°Celsius)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_DP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Relative Humidity from temperature and dew point — calcRH_DP","text":"Relative Humidity (0-100%)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_DP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Relative Humidity from temperature and dew point — calcRH_DP","text":"relative humidity calculated using following equation derived August-Roche-Magnus approximation: $$RH=100\\times\\frac{\\exp\\left(\\frac{\\left(17.625\\times DewP\\right)}{\\left(243.04+DewP\\right)}\\right)}{\\exp\\left(\\frac{\\left(17.625\\times Temp\\right)}{\\left(243.04+Temp\\right)}\\right)}$$ : RH relative humidity percent Temp air temperature °C DewP dew point temperature °C","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_DP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Relative Humidity from temperature and dew point — calcRH_DP","text":"Alduchov, O. ., R. E. Eskridge, 1996: Improved Magnus' form approximation saturation vapor pressure. J. Appl. Meteor., 35, 601-609. https://bmcnoldy.earth.miami.edu/Humidity.html","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcRH_DP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Relative Humidity from temperature and dew point — calcRH_DP","text":"","code":"# RH at air tempertaure of 20C and dew point of 15°C calcRH_DP(20, 15) #> [1] 72.93877  calcRH_DP(20, calcDP(20, 50)) #> [1] 50  head(mydata) |> dplyr::mutate(DewPoint = calcDP(Temp, RH), RH2 = calcRH_DP(Temp, DewPoint)) #> # A tibble: 6 × 7 #>   Site   Sensor Date                 Temp    RH DewPoint   RH2 #>   <chr>  <chr>  <dttm>              <dbl> <dbl>    <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8     6.38  36.8 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7     6.34  36.7 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6     6.30  36.6 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6     6.22  36.6 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5     6.18  36.5 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2     6.06  36.2"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSH.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Specific Humidity — calcSH","title":"Calculate Specific Humidity — calcSH","text":"Function calculate specific humidity (g/kg) temperature (°C) relative humidity (%). Specific humidity ratio mass water vapor mass air.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Specific Humidity — calcSH","text":"","code":"calcSH(Temp, RH, P_atm = 1013.25, ...)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Specific Humidity — calcSH","text":"Temp Temperature (°Celsius) RH Relative Humidity (0-100%) P_atm Atmospheric pressure = 1013.25 (hPa) ... Additional arguments supply calcPws","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Specific Humidity — calcSH","text":"SH Specific Humidity (g/kg)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSH.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Specific Humidity — calcSH","text":"Wallace, J.M. Hobbs, P.V. (2006). Atmospheric Science: Introductory Survey. Academic Press, 2nd edition.","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Specific Humidity — calcSH","text":"","code":"calcSH(20, 50) #> [1] 7.168026  head(mydata) |> dplyr::mutate(SpecificHumidity = calcSH(Temp, RH)) #> # A tibble: 6 × 6 #>   Site   Sensor Date                 Temp    RH SpecificHumidity #>   <chr>  <chr>  <dttm>              <dbl> <dbl>            <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8             5.89 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7             5.88 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6             5.86 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6             5.83 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5             5.81 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2             5.76"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSensibleHeatRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Sensible Heat Ratio (SHR) — calcSensibleHeatRatio","title":"Calculate Sensible Heat Ratio (SHR) — calcSensibleHeatRatio","text":"function calculates Sensible Heat Ratio (SHR) using sensible total heating values. Sensible heat ratio ratio sensible heat total heat.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSensibleHeatRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Sensible Heat Ratio (SHR) — calcSensibleHeatRatio","text":"","code":"calcSensibleHeatRatio(Temp1, Temp2, RH1, RH2, volumeFlowRate)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSensibleHeatRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Sensible Heat Ratio (SHR) — calcSensibleHeatRatio","text":"Temp1 Initial Temperature (°Celsius) Temp2 Final Temperature (°Celsius) RH1 Initial Relative Humidity (0-100%) RH2 Final Relative Humidity (0-100%) volumeFlowRate Volume flow rate air cubic meters per second (m³/s)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSensibleHeatRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Sensible Heat Ratio (SHR) — calcSensibleHeatRatio","text":"SHR Sensible Heat Ratio (0-100%)","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSensibleHeatRatio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Sensible Heat Ratio (SHR) — calcSensibleHeatRatio","text":"","code":"calcSensibleHeatRatio(20, 25, 50, 30, 0.5) #> [1] 27.9035"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSensibleHeating.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Sensible Heating — calcSensibleHeating","title":"Calculate Sensible Heating — calcSensibleHeating","text":"function calculates sensible heating power. Sensible heat energy causes object's temperature change without altering phase, also known \"dry\" heat can feel.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSensibleHeating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Sensible Heating — calcSensibleHeating","text":"","code":"calcSensibleHeating(Temp1, Temp2, RH = 50, volumeFlowRate)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSensibleHeating.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Sensible Heating — calcSensibleHeating","text":"Temp1 Initial Temperature (°Celsius) Temp2 Final Temperature (°Celsius) RH Initial Relative Humidity (0-100%). Optional, default 50%. volumeFlowRate Volume flow rate air cubic meters per second (m³/s)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSensibleHeating.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Sensible Heating — calcSensibleHeating","text":"Sensible heat kilowatts (kW)","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcSensibleHeating.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Sensible Heating — calcSensibleHeating","text":"","code":"calcSensibleHeating(20, 25, 50, 0.5) #> [1] 3.028141  calcSensibleHeating(20, 25, 60, 0.5) #> [1] 3.028115"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTemp.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Temperature from relative humidity and dew point — calcTemp","title":"Calculate Temperature from relative humidity and dew point — calcTemp","text":"function calculates temperature (°C) relative humidity (%) dew point temperature (°C).","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTemp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Temperature from relative humidity and dew point — calcTemp","text":"","code":"calcTemp(RH, DewP)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTemp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Temperature from relative humidity and dew point — calcTemp","text":"RH Relative Humidity (0-100%) DewP Td, Dew Point (°Celsius)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTemp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Temperature from relative humidity and dew point — calcTemp","text":"Temp, Temperature (°Celsius)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTemp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Temperature from relative humidity and dew point — calcTemp","text":"temperature calculated using following equation derived August-Roche-Magnus approximation: $$TempC=\\frac{243.04\\times\\left(\\frac{17.625\\times DewP}{243.04+DewP}-\\log\\left(\\frac{RH}{100}\\right)\\right)}{17.625+\\log\\left(\\frac{RH}{100}\\right)-\\frac{17.625\\times DewP}{243.04+DewP}}$$ : Temp calculated temperature Celsius RH relative humidity percent DewP dew point temperature Celsius","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTemp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Temperature from relative humidity and dew point — calcTemp","text":"","code":"# Calculate temperature for RH of 50% and dew point of 15°C calcTemp(50, 15) #> [1] 26.24387  calcTemp(50, calcDP(20, 50)) #> [1] 20  head(mydata) |> dplyr::mutate(DewPoint = calcDP(Temp, RH), Temp2 = calcTemp(RH, DewPoint)) #> # A tibble: 6 × 7 #>   Site   Sensor Date                 Temp    RH DewPoint Temp2 #>   <chr>  <chr>  <dttm>              <dbl> <dbl>    <dbl> <dbl> #> 1 London Room 1 2024-01-01 00:00:00  21.8  36.8     6.38  21.8 #> 2 London Room 1 2024-01-01 00:15:00  21.8  36.7     6.34  21.8 #> 3 London Room 1 2024-01-01 00:29:59  21.8  36.6     6.30  21.8 #> 4 London Room 1 2024-01-01 00:44:59  21.7  36.6     6.22  21.7 #> 5 London Room 1 2024-01-01 00:59:59  21.7  36.5     6.18  21.7 #> 6 London Room 1 2024-01-01 01:14:59  21.7  36.2     6.06  21.7"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTotalHeating.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Total Heating — calcTotalHeating","title":"Calculate Total Heating — calcTotalHeating","text":"function calculates total heating power. Total heating power sum sensible (felt) heat latent (hidden) heat.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTotalHeating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Total Heating — calcTotalHeating","text":"","code":"calcTotalHeating(Temp1, Temp2, RH1, RH2, volumeFlowRate)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTotalHeating.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Total Heating — calcTotalHeating","text":"Temp1 Initial Temperature (°Celsius) Temp2 Final Temperature (°Celsius) RH1 Initial Relative Humidity (0-100%) RH2 Final Relative Humidity (0-100%) volumeFlowRate Volume flow rate air cubic meters per second (m³/s)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTotalHeating.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Total Heating — calcTotalHeating","text":"Total Heating kilowatts (kW)","code":""},{"path":[]},{"path":"https://bhavshah01.github.io/ConSciR/reference/calcTotalHeating.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Total Heating — calcTotalHeating","text":"","code":"calcTotalHeating(20, 25, 50, 30, 0.5) #> [1] 0.979503"},{"path":"https://bhavshah01.github.io/ConSciR/reference/graph_TRH.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for graphing temperature and humidity data — graph_TRH","title":"Function for graphing temperature and humidity data — graph_TRH","text":"Use tool produce simple temperature humidity plot","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/graph_TRH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for graphing temperature and humidity data — graph_TRH","text":"","code":"graph_TRH(mydata, Date = \"Date\", Temp = \"Temp\", RH = \"RH\")"},{"path":"https://bhavshah01.github.io/ConSciR/reference/graph_TRH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for graphing temperature and humidity data — graph_TRH","text":"mydata data frame containing date, temperature, relative humidity data. Date name column mydata containing date information. Temp name column mydata containing temperature data. RH name column mydata containing relative humidity data.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/graph_TRH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for graphing temperature and humidity data — graph_TRH","text":"ggplot graph temperature relative humidity.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/graph_TRH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for graphing temperature and humidity data — graph_TRH","text":"","code":"graph_TRH(mydata, Date = \"Date\", Temp = \"Temp\", RH = \"RH\") #> Scale for y is already present. #> Adding another scale for y, which will replace the existing scale."},{"path":"https://bhavshah01.github.io/ConSciR/reference/graph_psychrometric.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Psychrometric Chart — graph_psychrometric","title":"Create a Psychrometric Chart — graph_psychrometric","text":"function generates psychrometric chart based input temperature relative humidity data. Various psychrometric functions can used y-axis. calcHR: Humidity Ratio (g/kg) calcMR: Mixing Ratio (g/kg) calcAH: Absolute Humidity (g/m^3) calcSH: Specific Humidity (g/kg) calcAD: Air Density (kg/m^3) calcDP: Dew Point (°C) calcEnthalpy: Enthalpy (kJ/kg) calcPws: Saturation vapor pressure (hPa) calcPw: Water Vapour Pressure (hPa) calcPI: Preservation Index calcLM: Lifetime calcEMC_wood: Equilibrium Moisture Content (wood)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/graph_psychrometric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Psychrometric Chart — graph_psychrometric","text":"","code":"graph_psychrometric(   mydata,   Temp = \"Temp\",   RH = \"RH\",   data_colour = \"RH\",   data_alpha = 0.5,   LowT = 16,   HighT = 25,   LowRH = 40,   HighRH = 60,   Temp_range = c(0, 40),   y_func = calcMR,   ... )"},{"path":"https://bhavshah01.github.io/ConSciR/reference/graph_psychrometric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Psychrometric Chart — graph_psychrometric","text":"mydata data frame containing temperature relative humidity data. Temp Column name mydata temperature values. RH Column name mydata relative humidity values. data_colour Column name use colour data points. Default \"RH\". data_alpha Value supply make points less transparent. Default 0.5. LowT Numeric value lower temperature limit target range. Default 16°C. HighT Numeric value upper temperature limit target range. Default 25°C. LowRH Numeric value lower relative humidity limit target range. Default 40%. HighRH Numeric value upper relative humidity limit target range. Default 60%. Temp_range Numeric vector length 2 specifying overall temperature range chart. Default c(0, 40). y_func Function calculate y-axis values. See options, default calcMR (mixing ratio). ... Additional arguments passed y_func.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/graph_psychrometric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Psychrometric Chart — graph_psychrometric","text":"ggplot object representing psychrometric chart.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/graph_psychrometric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Psychrometric Chart — graph_psychrometric","text":"","code":"# Basic usage with default settings graph_psychrometric(head(mydata, 100), Temp, RH)   # Custom temperature and humidity ranges graph_psychrometric(head(mydata, 100), Temp, RH, LowT = 8, HighT = 28, LowRH = 30, HighRH = 70)   # Using a different psychrometric function (e.g., Absolute Humidity) graph_psychrometric(head(mydata, 100), Temp, RH, y_func = calcAH)   # Adjusting the overall temperature range of the chart graph_psychrometric(head(mydata, 100), Temp, RH, Temp_range = c(12, 30))   # Change the colour of the points to a variable graph_psychrometric(head(mydata, 100), Temp, RH, data_colour = \"Sensor\", y_func = calcDP) #> Warning: Removed 41 rows containing missing values or values outside the scale range #> (`geom_line()`). #> Warning: Removed 1 row containing missing values or values outside the scale range #> (`geom_text()`)."},{"path":"https://bhavshah01.github.io/ConSciR/reference/mydata.html","id":null,"dir":"Reference","previous_headings":"","what":"Climate dataset to demonstrate functions — mydata","title":"Climate dataset to demonstrate functions — mydata","text":"climate dataset use demonstrate functions work.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/mydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Climate dataset to demonstrate functions — mydata","text":"","code":"mydata"},{"path":"https://bhavshah01.github.io/ConSciR/reference/mydata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Climate dataset to demonstrate functions — mydata","text":"data frame 35,136 rows 5 columns: Site, Sensor Sensor location name Date Date ISOdate time format Temp, RH Temperature (C) relative humidity (%)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/mydata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Climate dataset to demonstrate functions — mydata","text":"Climate","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_ConSciR_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ConSciR Shiny Application — run_ConSciR_app","title":"Run ConSciR Shiny Application — run_ConSciR_app","text":"Run ConSciR Shiny Application","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_ConSciR_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ConSciR Shiny Application — run_ConSciR_app","text":"","code":"run_ConSciR_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_ConSciR_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ConSciR Shiny Application — run_ConSciR_app","text":"Shiny object","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_ConSciR_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run ConSciR Shiny Application — run_ConSciR_app","text":"","code":"# run_ConSciR_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_Mould_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ConSciR Mould Application — run_Mould_app","title":"Run ConSciR Mould Application — run_Mould_app","text":"Shiny application upload data estimate mould growth predictions. CSV Excel formatted data \"Temp\" \"RH\" columns can uploaded application. Functions available: calcMould_Zeng: Mould Growth Rate Limits calcMould_VTT: Mould Growth Index (VTT model)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_Mould_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ConSciR Mould Application — run_Mould_app","text":"","code":"run_Mould_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_Mould_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ConSciR Mould Application — run_Mould_app","text":"Shiny object","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_Mould_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run ConSciR Mould Application — run_Mould_app","text":"","code":"# run_Mould_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_Psychrometric_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ConSciR Psychrometric and Graphing Application — run_Psychrometric_app","title":"Run ConSciR Psychrometric and Graphing Application — run_Psychrometric_app","text":"Shiny application upload data psychrometric chart. Also includes graphs temperature humidity - line plot limits shaded bivariate plot box showing limits. CSV Excel formatted data \"Temp\" \"RH\" columns can uploaded application. Use sliders functions set limits parameters used. Functions available: calcHR: Humidity Ratio (g/kg) calcMR: Mixing Ratio (g/kg) calcAH: Absolute Humidity (g/m^3) calcSH: Specific Humidity (g/kg) calcAD: Air Density (kg/m^3) calcDP: Dew Point (°C) calcEnthalpy: Enthalpy (kJ/kg) calcPws: Saturation vapor pressure (hPa) calcPw: Water Vapour Pressure (hPa) calcPI: Preservation Index calcLM: Lifetime calcEMC_wood: Equilibrium Moisture Content (wood)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_Psychrometric_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ConSciR Psychrometric and Graphing Application — run_Psychrometric_app","text":"","code":"run_Psychrometric_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_Psychrometric_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ConSciR Psychrometric and Graphing Application — run_Psychrometric_app","text":"Shiny object","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_Psychrometric_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run ConSciR Psychrometric and Graphing Application — run_Psychrometric_app","text":"","code":"# run_Psychrometric_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_SilicaGel_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ConSciR Silica Gel Calculator Application — run_SilicaGel_app","title":"Run ConSciR Silica Gel Calculator Application — run_SilicaGel_app","text":"Shiny application calculate amount silica gel required. Temperature humidity data proposed location, case dimensions, air exchange rate (AER) known, inputs. CSV Excel data \"Date\", \"Temp\" \"RH\" columns can uploaded application.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_SilicaGel_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ConSciR Silica Gel Calculator Application — run_SilicaGel_app","text":"","code":"run_SilicaGel_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_SilicaGel_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ConSciR Silica Gel Calculator Application — run_SilicaGel_app","text":"Shiny object","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_SilicaGel_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run ConSciR Silica Gel Calculator Application — run_SilicaGel_app","text":"","code":"# run_SilicaGel_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_TRHbivariate_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ConSciR Temperature and Humidity Application — run_TRHbivariate_app","title":"Run ConSciR Temperature and Humidity Application — run_TRHbivariate_app","text":"Shiny application plot temperature humidity data bivariate chart. summary data also produced specifying temperature humidity box. CSV Excel formatted data \"Temp\" \"RH\" columns can uploaded application.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_TRHbivariate_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ConSciR Temperature and Humidity Application — run_TRHbivariate_app","text":"","code":"run_TRHbivariate_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_TRHbivariate_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ConSciR Temperature and Humidity Application — run_TRHbivariate_app","text":"Shiny object","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_TRHbivariate_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run ConSciR Temperature and Humidity Application — run_TRHbivariate_app","text":"","code":"# run_Psychrometric_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_TidyData_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ConSciR Tidying Data Application — run_TidyData_app","title":"Run ConSciR Tidying Data Application — run_TidyData_app","text":"Shiny application help tidying data. CSV Excel formatted data can uploaded application.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_TidyData_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ConSciR Tidying Data Application — run_TidyData_app","text":"","code":"run_TidyData_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_TidyData_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ConSciR Tidying Data Application — run_TidyData_app","text":"Shiny object","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/run_TidyData_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run ConSciR Tidying Data Application — run_TidyData_app","text":"","code":"# run_TidyData_app()"},{"path":"https://bhavshah01.github.io/ConSciR/reference/shiny_dataUploadServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny Module Server for Data Upload and Processing — shiny_dataUploadServer","title":"Shiny Module Server for Data Upload and Processing — shiny_dataUploadServer","text":"function creates Shiny module server uploading CSV Excel files, processing data, returning tidied dataset.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/shiny_dataUploadServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny Module Server for Data Upload and Processing — shiny_dataUploadServer","text":"","code":"shiny_dataUploadServer(id)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/shiny_dataUploadServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny Module Server for Data Upload and Processing — shiny_dataUploadServer","text":"id character string corresponds ID used UI function module.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/shiny_dataUploadServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny Module Server for Data Upload and Processing — shiny_dataUploadServer","text":"reactive expression containing tidied data frame following columns:  Date: Date time, floored hour Sensor: Sensor identifier Site: Site identifier Temp: Median average temperature hour RH: Median average relative humidity hour","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/shiny_dataUploadServer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny Module Server for Data Upload and Processing — shiny_dataUploadServer","text":"","code":"if (FALSE) { # \\dontrun{  # In a Shiny app: ui <- fluidPage(   shiny_dataUploadUI(\"dataUpload\") )  server <- function(input, output, session) {   data <- shiny_dataUploadServer(\"dataUpload\") }  } # }"},{"path":"https://bhavshah01.github.io/ConSciR/reference/shiny_dataUploadUI.html","id":null,"dir":"Reference","previous_headings":"","what":"UI Module for Data Upload in Shiny — shiny_dataUploadUI","title":"UI Module for Data Upload in Shiny — shiny_dataUploadUI","text":"function creates Shiny UI module uploading data files. provides file input interface can integrated larger Shiny application.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/shiny_dataUploadUI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UI Module for Data Upload in Shiny — shiny_dataUploadUI","text":"","code":"shiny_dataUploadUI(id)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/shiny_dataUploadUI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"UI Module for Data Upload in Shiny — shiny_dataUploadUI","text":"id character string defines namespace module's UI elements.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/shiny_dataUploadUI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"UI Module for Data Upload in Shiny — shiny_dataUploadUI","text":"`tagList` containing `uiOutput` file upload. specific elements   output (file input upload button) defined   corresponding server function.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/shiny_dataUploadUI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UI Module for Data Upload in Shiny — shiny_dataUploadUI","text":"","code":"if (FALSE) { # \\dontrun{  # In a Shiny app: ui <- fluidPage(   shiny_dataUploadUI(\"dataUpload\") )  server <- function(input, output, session) {   data <- shiny_dataUploadServer(\"dataUpload\") }  } # }"},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_Hanwell.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Hanwell EMS Data (Min-Max report) — tidy_Hanwell","title":"Tidy Hanwell EMS Data (Min-Max report) — tidy_Hanwell","text":"function reads processes Hanwell Environmental Monitoring System (EMS) data, transforming tidy format suitable analysis.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_Hanwell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Hanwell EMS Data (Min-Max report) — tidy_Hanwell","text":"","code":"tidy_Hanwell(EMS_MinMax_datapath)"},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_Hanwell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Hanwell EMS Data (Min-Max report) — tidy_Hanwell","text":"EMS_MinMax_datapath EMS_MinMax_datapath Character string specifying file path Hanwell EMS data file.","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_Hanwell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy Hanwell EMS Data (Min-Max report) — tidy_Hanwell","text":"tibble containing tidied Hanwell EMS data following columns: Date Time POSIXct datetime measurement Sensor Character string identifying sensor TempMin Numeric minimum temperature (°C) TempMax Numeric maximum temperature (°C) Temp Numeric average temperature (°C) RHMin Numeric minimum relative humidity ( RHMax Numeric maximum relative humidity ( RH Numeric average relative humidity ( Date Date measurement (duplicate Date Time)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_Hanwell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy Hanwell EMS Data (Min-Max report) — tidy_Hanwell","text":"","code":"if (FALSE) { # \\dontrun{ hanwell_data <- \"path/to/your/EMS_MinMax_data.csv\" ems_data <- tidy_Hanwell(hanwell_data) } # }"},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_Meaco.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Meaco sensor data — tidy_Meaco","title":"Tidy Meaco sensor data — tidy_Meaco","text":"function takes raw Meaco sensor data performs several cleaning processing steps: Filters rows missing dates Renames column names consistency Converts temperature relative humidity numeric Rounds dates nearest hour Calculates hourly averages temperature relative humidity Pads data ensure hourly intervals using padr package Filters unrealistic temperature humidity values          (outside -50°C 50°C 0 100%RH)","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_Meaco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Meaco sensor data — tidy_Meaco","text":"","code":"tidy_Meaco(   mydata,   Site_col = \"RECEIVER\",   Sensor_col = \"TRANSMITTER\",   Date_col = \"DATE\",   Temp_col = \"TEMPERATURE\",   RH_col = \"HUMIDITY\" )"},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_Meaco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Meaco sensor data — tidy_Meaco","text":"mydata data frame containing raw Meaco sensor data columns RECEIVER, TRANSMITTER, DATE, TEMPERATURE, HUMIDITY Site_col string specifying name column `mydata` contains location information. Default \"RECEIVER\". Sensor_col string specifying name column `mydata` contains sensor information. Default \"TRANSMITTER\". Date_col string specifying name column `mydata` contains date information. Default \"DATE\". Temp_col string specifying name column `mydata` contains temperature data. Default \"TEMPERATURE\". RH_col string specifying name column `mydata` contains relative humidity data. Default \"HUMIDITY\".","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_Meaco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy Meaco sensor data — tidy_Meaco","text":"tidied data frame columns Site, Sensor, Date, Temp, RH","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_Meaco.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy Meaco sensor data — tidy_Meaco","text":"","code":"if (FALSE) { # \\dontrun{  meaco_data <- read.csv(\"path/to/your/meaco_data.csv\") meaco_tidy <- tidy_Meaco(meaco_data)  } # }"},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_TRHdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy and Process Temperature and Relative Humidity data — tidy_TRHdata","title":"Tidy and Process Temperature and Relative Humidity data — tidy_TRHdata","text":"function tidies processes temperature, relative humidity, date data given dataset. filters rows missing date values, renames columns, converts temperature humidity numeric types, groups data site, sensor, date. function also pads data ensure hourly intervals. Filters rows missing dates Renames columns consistency Converts temperature relative humidity numeric Rounds dates nearest hour Calculates hourly averages temperature relative humidity Pads data ensure hourly intervals Filters implausible temperature humidity values","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_TRHdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy and Process Temperature and Relative Humidity data — tidy_TRHdata","text":"","code":"tidy_TRHdata(   mydata,   Site_col = \"Site\",   Sensor_col = \"Sensor\",   Date_col = \"Date\",   Temp_col = \"Temp\",   RH_col = \"RH\" )"},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_TRHdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy and Process Temperature and Relative Humidity data — tidy_TRHdata","text":"mydata data frame containing raw TRH data. include columns site, sensor, date, temperature, relative humidity. Site_col string specifying name column `mydata` contains location information. Default \"Site\". Sensor_col string specifying name column `mydata` contains sensor information. Default \"Sensor\". Date_col string specifying name column `mydata` contains date information. Default \"Date\". Temp_col string specifying name column `mydata` contains temperature data. Default \"Temp\". RH_col string specifying name column `mydata` contains relative humidity data. Default \"RH\".","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_TRHdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy and Process Temperature and Relative Humidity data — tidy_TRHdata","text":"tidy data frame containing processed TRH data columns Site, Sensor, Date (floored nearest hour), Temperature (mean values), Relative Humidity (mean values).","code":""},{"path":"https://bhavshah01.github.io/ConSciR/reference/tidy_TRHdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy and Process Temperature and Relative Humidity data — tidy_TRHdata","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage: mydata <- read.csv(\"path/to/your/data.csv\") tidy_data <- tidy_TRHdata(mydata,                            Site_col = \"RECEIVER\",                            Sensor_col = \"TRANSMITTER\",                            Date_col = \"DATE\",                            Temp_col = \"TEMPERATURE\",                            RH_col = \"HUMIDITY\")  # View the tidy data head(tidy_data) } # }"},{"path":"https://bhavshah01.github.io/ConSciR/news/index.html","id":"conscir-010","dir":"Changelog","previous_headings":"","what":"ConSciR 0.1.0","title":"ConSciR 0.1.0","text":"Initial CRAN submission.","code":""}]
